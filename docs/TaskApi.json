
[{
    "methodType":"POST",
    "methodName":"createtask",
    "returnType":{
      "primitive":false,
      "jsType":"",
      "modelName":"Task"
    },
    "importStatement":"import TempApi from '../src/index';",
    "apiInstance":"let apiTaskApi = new TempApi.TaskApi();",
    "importModelParameter":["let task = new TempApi.Task();"],
    "modelNames":["task"],
    "functionNextTemplate":"/**nextFunction*/",
    "apiCallPromisified":"apiTaskApi.createtask( task, (error, data, response) => { if (error) {console.error(error);} else { console.log('API called successfully. Returned data: ' + data); /**nextFunction*/}});"
  },{
    "methodType":"DELETE",
    "methodName":"deletetask",
    "returnType":{

      "primitive":"true",
      "type":"null"
    },
    "importStatement":"import TempApi from '../src/index';",
    "apiInstance":"let apiTaskApi = new TempApi.TaskApi();",
    "importModelParameter":[],
    "modelNames":[],
    "functionNextTemplate":"/**nextFunction*/",
    "apiCallPromisified":"apiTaskApi.deletetask( taskId, (error, data, response) => { if (error) {console.error(error);} else { console.log('API called successfully.');/**nextFunction*/}});"
  },{
    "methodType":"GETALL",
    "methodName":"getAlltask",
    "returnType":{
      "primitive":false,
      "jsType":"Array",
      "modelName":"[Task]"
    },
    "importStatement":"import TempApi from '../src/index';",
    "apiInstance":"let apiTaskApi = new TempApi.TaskApi();",
    "importModelParameter":[],
    "modelNames":[],
    "functionNextTemplate":"/**nextFunction*/",
    "apiCallPromisified":"apiTaskApi.getAlltask((error, data, response) => { if (error) {console.error(error);} else { console.log('API called successfully. Returned data: ' + data); /**nextFunction*/}});"
  },{
    "methodType":"GETBYPARAMS",
    "methodName":"getByParamstask",
    "returnType":{
      "primitive":false,
      "jsType":"Array",
      "modelName":"[Task]"
    },
    "importStatement":"import TempApi from '../src/index';",
    "apiInstance":"let apiTaskApi = new TempApi.TaskApi();",
    "importModelParameter":[],
    "modelNames":[],
    "functionNextTemplate":"/**nextFunction*/",
    "apiCallPromisified":"apiTaskApi.getByParamstask( filter, (error, data, response) => { if (error) {console.error(error);} else { console.log('API called successfully. Returned data: ' + data); /**nextFunction*/}});"
  },{
    "methodType":"GET",
    "methodName":"gettask",
    "returnType":{
      "primitive":false,
      "jsType":"",
      "modelName":"Task"
    },
    "importStatement":"import TempApi from '../src/index';",
    "apiInstance":"let apiTaskApi = new TempApi.TaskApi();",
    "importModelParameter":[],
    "modelNames":[],
    "functionNextTemplate":"/**nextFunction*/",
    "apiCallPromisified":"apiTaskApi.gettask( taskId, (error, data, response) => { if (error) {console.error(error);} else { console.log('API called successfully. Returned data: ' + data); /**nextFunction*/}});"
  },{
    "methodType":"PUT",
    "methodName":"updatetask",
    "returnType":{
      "primitive":false,
      "jsType":"",
      "modelName":"Task"
    },
    "importStatement":"import TempApi from '../src/index';",
    "apiInstance":"let apiTaskApi = new TempApi.TaskApi();",
    "importModelParameter":[],
    "modelNames":[],
    "functionNextTemplate":"/**nextFunction*/",
    "apiCallPromisified":"apiTaskApi.updatetask( taskId, opts, (error, data, response) => { if (error) {console.error(error);} else { console.log('API called successfully. Returned data: ' + data); /**nextFunction*/}});"
  }
]
